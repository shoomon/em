plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // OAuth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    // Lombok
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'

    // PostgreSQL
    runtimeOnly 'org.postgresql:postgresql'

    // Hibernate-Spatial
    implementation 'org.hibernate.orm:hibernate-spatial:6.4.4.Final'

    // Jts-Core
    implementation group: 'org.locationtech.jts', name: 'jts-core', version: '1.20.0'

    // QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    compileOnly 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    compileOnly 'jakarta.annotation:jakarta.annotation-api'
    compileOnly 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Flyway
//    implementation 'org.flywaydb:flyway-core'
//    runtimeOnly 'org.flywaydb:flyway-database-postgresql'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'

    // Spotify
    implementation 'se.michaelthelin.spotify:spotify-web-api-java:8.0.0'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

tasks.named('compileJava') {
    options.compilerArgs += [
            "-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated"
    ]
}


sourceSets {
    main {
        java {
            srcDir querydslDir
        }
    }
}

clean {
    delete querydslDir
}
